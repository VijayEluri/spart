/*
 * 
 * ClosureResult.java
 * 
 * Software License Agreement (BSD License)
 * 
 * Copyright (c) 2009 Daniel Fleischhacker
 * All rights reserved.
 * 
 * Redistribution and use of this software in source and binary forms, with or
 * without modification, are permitted provided that the following conditions
 * are met:
 * 
 *   1. Redistributions of source code must retain the above copyright notice,
 *      this list of conditions and the following disclaimer.
 * 
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package de.dfleischhacker.uni.thesis.semantic;

import de.dfleischhacker.uni.thesis.utils.alignment.Alignment;
import de.dfleischhacker.uni.thesis.utils.ontology.Ontology;

/**
 * This class is used to export the data generated internally in the semantic
 * modules to the caller. These results can be used to give an insight into
 * the evaluation process or for debugging purposes. Its main payload is the
 * closure of the alignment.
 *
 * If a new semantic has more internal results worth the export this class
 * can be modified accordingly.
 * @author Daniel Fleischhacker <dev@dfleischhacker.de>
 */
public class ClosureResult {
	/**
	 * The alignment closure
	 */
	private Alignment closure;

	/**
	 * The aligned ontology of the regarded alignment
	 */
	private Ontology alignedOntology;

	/**
	 * Initializes the result object to contain the given alignment closure.
	 * As this is the main payload of this object there is no way of initialization
	 * without providing this data.
	 * @param closure the generated closure
	 */
	public ClosureResult(Alignment closure) {
		this.closure = closure;
	}

	/**
	 * Returns the closure stored in this ClosureResult
	 * @return closure
	 */
	public Alignment getClosure() {
		return closure;
	}

	/**
	 * Sets the aligned ontology. If the semantic does not generate anything
	 * similiar to an aligned ontology, this should be null (which it is by
	 * default when this method is not called)
	 * @param alignedOntology the aligned ontology
	 */
	public void setAlignedOntology(Ontology alignedOntology) {
		this.alignedOntology = alignedOntology;
	}

	/**
	 * Returns the aligned ontology generated by the semantic or null if
	 * the semantic does not generate something like this.
	 * @return aligned ontology generated by the semantic or null if nothing
	 *	similiar is generated by the semantic
	 */
	public Ontology getAlignedOntology() {
		return alignedOntology;
	}
}
