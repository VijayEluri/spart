/*
 *
 * AlignmentFrame.java
 *
 * Software License Agreement (BSD License)
 *
 * Copyright (c) 2009 Daniel Fleischhacker <dev@dfleischhacker.de>
 * All rights reserved.
 *
 * Redistribution and use of this software in source and binary forms, with or
 * without modification, are permitted provided that the following conditions
 * are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice,
 *      this list of conditions and the following disclaimer.
 *
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package de.dfleischhacker.uni.thesis.userinterface.swing;


import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import de.dfleischhacker.uni.thesis.utils.alignment.Alignment;
import de.dfleischhacker.uni.thesis.utils.alignment.AlignmentFormatException;
import de.dfleischhacker.uni.thesis.utils.alignment.AlignmentManager;

/**
 * Frame to compare aligments to reference alignments. The differences are
 * highlighted by using colors.
 * @author Daniel Fleischhacker <dev@dfleischhacker.de>
 */
public class AlignmentFrame extends javax.swing.JFrame {

    /**
	 * Creates new form AlignmentFrame.
	 * Initializes the frame's table by using the given alignments
	 * @param refalign reference alignment
	 * @param align alignment
	 */
    public AlignmentFrame(Alignment align, Alignment refalign) {
        initComponents();
		fillTable(align, refalign);
    }

	/**
	 * Fills the table by using the given alignments
	 * @param refalign reference alignment
	 * @param refalignClosure closure of reference alignment
	 * @param align alignment
	 * @param alignClosure closure of alignment
	 */
	private void fillTable(Alignment align, Alignment refalign) {
		correspondenceTable.setModel(
			new AlignmentTableModel(align, refalign)
		);
		correspondenceTable.setDefaultRenderer(Object.class, new AlignmentTableRenderer());
		correspondenceTable.getColumnModel().getColumn(0).setPreferredWidth(5);
		correspondenceTable.getColumnModel().getColumn(1).setPreferredWidth(200);
		correspondenceTable.getColumnModel().getColumn(2).setPreferredWidth(200);
		correspondenceTable.getColumnModel().getColumn(3).setPreferredWidth(5);
		correspondenceTable.getColumnModel().getColumn(4).setPreferredWidth(25);
		correspondenceTable.getColumnModel().getColumn(5).setPreferredWidth(5);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        correspondenceTable = new javax.swing.JTable();
        exitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alignment Viewer");

        correspondenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(correspondenceTable);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Rel = Relation; Conf = Confidence; S = State (✔ = correct, ✘ = wrong)");

        jLabel2.setText("Colors: green - correctly found; red - wrongly found; yellow - only in reference");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
		this.setVisible(false);
		this.dispose();
}//GEN-LAST:event_exitButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
            public void run() {
				Alignment align = null;
				Alignment refalign = null;
				try {
					align = AlignmentManager.loadAlignment("/home/daniel/301 (Kopie)/CIDER.rdf");
					refalign = AlignmentManager.loadAlignment("/home/daniel/301 (Kopie)/refalign.rdf");
				} catch (FileNotFoundException ex) {
					Logger.getLogger(AlignmentFrame.class.getName()).log(Level.SEVERE, null, ex);
				} catch (SAXException ex) {
					Logger.getLogger(AlignmentFrame.class.getName()).log(Level.SEVERE, null, ex);
				} catch (IOException ex) {
					Logger.getLogger(AlignmentFrame.class.getName()).log(Level.SEVERE, null, ex);
				} catch (ParserConfigurationException ex) {
					Logger.getLogger(AlignmentFrame.class.getName()).log(Level.SEVERE, null, ex);
				} catch (AlignmentFormatException ex) {
					Logger.getLogger(AlignmentFrame.class.getName()).log(Level.SEVERE, null, ex);
				}
                new AlignmentFrame(align, refalign).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable correspondenceTable;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
